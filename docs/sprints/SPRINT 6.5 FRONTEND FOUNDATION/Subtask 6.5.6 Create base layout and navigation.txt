
---

## üì¶ Subtask 6.5.6: Create base layout and navigation

### Prompt for Claude CLI:
````
I need to create the base layout with header/navigation.

CONTEXT:
- Site header with logo and navigation links
- Responsive mobile menu
- User menu when authenticated
- Toaster for notifications

TASK:
Create base layout:

FILES TO CREATE:

1. src/components/site-header.tsx
````typescript
'use client';

import { useState, useEffect } from 'react';
import Link from 'next/link';
import { usePathname } from 'next/navigation';
import { useUser, useSupabaseClient } from '@/components/providers/SupabaseProvider';
import { Button } from '@/components/ui/button';
import { Menu, X, User, LogOut } from 'lucide-react';
import { toast } from 'sonner';
import { cn } from '@/lib/utils';

export function SiteHeader() {
  const pathname = usePathname();
  const { user, loading } = useUser();
  const supabase = useSupabaseClient();
  const [mobileMenuOpen, setMobileMenuOpen] = useState(false);
  const [profile, setProfile] = useState<any>(null);

  useEffect(() => {
    if (user) {
      fetchProfile();
    }
  }, [user]);

  const fetchProfile = async () => {
    if (!user) return;
    
    const { data } = await supabase
      .from('profiles')
      .select('nickname, is_admin')
      .eq('id', user.id)
      .single();
    
    setProfile(data);
  };

  const handleSignOut = async () => {
    await supabase.auth.signOut();
    toast.success('Signed out successfully');
  };

  const baseLinks = [
    { href: '/', label: 'Home' },
    { href: '/marketplace', label: 'Marketplace' },
    { href: '/templates', label: 'Templates' },
  ];

  const authenticatedLinks = user ? [
    ...baseLinks,
    { href: '/my-templates', label: 'My Templates' },
    { href: '/marketplace/my-listings', label: 'My Listings' },
    { href: '/favorites', label: 'Favorites' },
    ...(profile?.is_admin ? [{ href: '/admin/dashboard', label: 'Admin' }] : []),
  ] : baseLinks;

  return (
    <header className="sticky top-0 z-50 w-full border-b-2 border-black bg-[#111827]">
      <div className="container mx-auto px-4">
        <div className="flex h-16 items-center justify-between">
          {/* Logo */}
          <Link href="/" className="flex items-center space-x-2">
            <span className="text-2xl font-black uppercase text-[#FFC000]">
              CambioCromos
            </span>
          </Link>

          {/* Desktop Navigation */}
          <nav className="hidden md:flex md:items-center md:space-x-6">
            {authenticatedLinks.map((link) => (
              <Link
                key={link.href}
                href={link.href}
                className={cn(
                  'text-sm font-medium transition-colors hover:text-[#FFC000]',
                  pathname === link.href ? 'text-[#FFC000]' : 'text-gray-300'
                )}
              >
                {link.label}
              </Link>
            ))}
          </nav>

          {/* Auth Buttons / User Menu */}
          <div className="hidden md:flex md:items-center md:space-x-4">
            {loading ? (
              <div className="h-8 w-8 animate-spin rounded-full border-2 border-[#FFC000] border-r-transparent" />
            ) : user ? (
              <>
                <Link href="/profile">
                  <Button variant="outline" size="sm">
                    <User className="mr-2 h-4 w-4" />
                    {profile?.nickname || 'Profile'}
                  </Button>
                </Link>
                <Button variant="ghost" size="sm" onClick={handleSignOut}>
                  <LogOut className="mr-2 h-4 w-4" />
                  Sign Out
                </Button>
              </>
            ) : (
              <>
                <Link href="/login">
                  <Button variant="outline" size="sm">
                    Sign In
                  </Button>
                </Link>
                <Link href="/register">
                  <Button size="sm">
                    Sign Up
                  </Button>
                </Link>
              </>
            )}
          </div>

          {/* Mobile Menu Button */}
          <button
            className="md:hidden"
            onClick={() => setMobileMenuOpen(!mobileMenuOpen)}
          >
            {mobileMenuOpen ? (
              <X className="h-6 w-6 text-white" />
            ) : (
              <Menu className="h-6 w-6 text-white" />
            )}
          </button>
        </div>

        {/* Mobile Menu */}
        {mobileMenuOpen && (
          <div className="md:hidden border-t-2 border-black py-4 space-y-2">
            {authenticatedLinks.map((link) => (
              <Link
                key={link.href}
                href={link.href}
                className={cn(
                  'block px-2 py-2 text-sm font-medium transition-colors hover:text-[#FFC000]',
                  pathname === link.href ? 'text-[#FFC000]' : 'text-gray-300'
                )}
                onClick={() => setMobileMenuOpen(false)}
              >
                {link.label}
              </Link>
            ))}
            <div className="border-t-2 border-gray-700 pt-2 mt-2">
              {user ? (
                <>
                  <Link
                    href="/profile"
                    className="block px-2 py-2 text-sm font-medium text-gray-300"
                    onClick={() => setMobileMenuOpen(false)}
                  >
                    {profile?.nickname || 'Profile'}
                  </Link>
                  <button
                    onClick={() => {
                      handleSignOut();
                      setMobileMenuOpen(false);
                    }}
                    className="block w-full text-left px-2 py-2 text-sm font-medium text-gray-300"
                  >
                    Sign Out
                  </button>
                </>
              ) : (
                <>
                  <Link
                    href="/login"
                    className="block px-2 py-2 text-sm font-medium text-gray-300"
                    onClick={() => setMobileMenuOpen(false)}
                  >
                    Sign In
                  </Link>
                  <Link
                    href="/register"
                    className="block px-2 py-2 text-sm font-medium text-gray-300"
                    onClick={() => setMobileMenuOpen(false)}
                  >
                    Sign Up
                  </Link>
                </>
              )}
            </div>
          </div>
        )}
      </div>
    </header>
  );
}
````

2. Update src/app/layout.tsx
````typescript
import type { Metadata } from 'next';
import { Inter } from 'next/font/google';
import './globals.css';
import { SupabaseProvider } from '@/components/providers/SupabaseProvider';
import { SiteHeader } from '@/components/site-header';
import { Toaster } from 'sonner';

const inter = Inter({ subsets: ['latin'] });

export const metadata: Metadata = {
  title: 'CambioCromos - Sports Card Marketplace',
  description: 'Community platform for exchanging physical sports cards',
  viewport: {
    width: 'device-width',
    initialScale: 1,
    maximumScale: 5,
  },
  themeColor: '#1F2937',
};

export default function RootLayout({
  children,
}: {
  children: React.ReactNode;
}) {
  return (
    <html lang="en">
      <body className={inter.className}>
        <SupabaseProvider>
          <SiteHeader />
          <main id="main-content" role="main">
            {children}
          </main>
          <Toaster 
            position="top-right"
            toastOptions={{
              style: {
                background: '#374151',
                color: '#fff',
                border: '2px solid #000',
              },
            }}
          />
        </SupabaseProvider>
      </body>
    </html>
  );
}
````

3. Create src/app/page.tsx (temporary homepage)
````typescript
import Link from 'next/link';
import { Button } from '@/components/ui/button';
import { ModernCard, ModernCardContent } from '@/components/ui/modern-card';

export default function HomePage() {
  return (
    <div className="min-h-screen bg-[#1F2937]">
      <div className="container mx-auto px-4 py-16">
        {/* Hero */}
        <div className="text-center mb-16">
          <h1 className="text-5xl md:text-7xl font-black uppercase text-white mb-4">
            Welcome to <span className="text-[#FFC000]">CambioCromos</span>
          </h1>
          <p className="text-xl text-gray-400 mb-8 max-w-2xl mx-auto">
            The community marketplace for sports card collectors
          </p>
          <div className="flex gap-4 justify-center">
            <Link href="/marketplace">
              <Button size="lg" className="text-lg">
                Browse Marketplace
              </Button>
            </Link>
            <Link href="/templates">
              <Button size="lg" variant="outline" className="text-lg">
                Explore Templates
              </Button>
            </Link>
          </div>
        </div>

        {/* Features */}
        <div className="grid grid-cols-1 md:grid-cols-3 gap-6 max-w-5xl mx-auto">
          <ModernCard>
            <ModernCardContent className="p-6 text-center">
              <div className="text-4xl mb-4">üè™</div>
              <h3 className="text-xl font-bold text-white mb-2">Marketplace</h3>
              <p className="text-gray-400">
                Buy, sell, and trade physical cards with the community
              </p>
            </ModernCardContent>
          </ModernCard>

          <ModernCard>
            <ModernCardContent className="p-6 text-center">
              <div className="text-4xl mb-4">üìã</div>
              <h3 className="text-xl font-bold text-white mb-2">Collections</h3>
              <p className="text-gray-400">
                Create custom templates and track your progress
              </p>
            </ModernCardContent>
          </ModernCard>

          <ModernCard>
            <ModernCardContent className="p-6 text-center">
              <div className="text-4xl mb-4">ü§ù</div>
              <h3 className="text-xl font-bold text-white mb-2">Community</h3>
              <p className="text-gray-400">
                Connect with collectors and build your network
              </p>
            </ModernCardContent>
          </ModernCard>
        </div>
      </div>
    </div>
  );
}
````

DELIVERABLES:
1. SiteHeader with navigation
2. Updated root layout with providers
3. Temporary homepage
4. Toaster setup
5. Responsive mobile menu

Give me git commands afterwards.
````
